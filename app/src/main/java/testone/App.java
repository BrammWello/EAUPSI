/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package testone;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.datastax.oss.driver.api.core.cql.ResultSet;
import com.datastax.oss.driver.api.core.cql.Row;

import java.awt.Desktop;

public class App {
    public String getGreeting() {
        return "Started App";
    }

    public static void main(String[] args) throws IOException {
        
        // GetUsers(rs);

        GetBlockchainDBData();

        Timer timer = new Timer();

        timer.schedule(new TimerTask() {

            @Override
            public void run() {
                TestDbSql();
                RoutineCheck(); 
            }
            
        }, 30 * 1000, 15 * 1000);
        
    }

    private static void TestDbSql() {
        
        //get and insert students to cassandra
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = null;
            conn = DriverManager.getConnection("jdbc:mysql://localhost/classattendance","root", "");
            System.out.println("Database is connected !");

            String QUERY = "SELECT * FROM `students` WHERE 1";

            Statement stmt = conn.createStatement();
            java.sql.ResultSet rs = stmt.executeQuery(QUERY);

            while (rs.next()) {
                // Retrieve by column name

                String sqlQuery = "INSERT INTO students (userid, email, names, pass, earlycounts, latecounts) VALUES ('" + rs.getString("userid") + "','" + rs.getString("email") + "','" + rs.getString("names") + "','"+ rs.getString("pass") + "','"+ rs.getString("earlycount") + "','"+ rs.getString("latecounts") + "')";
                CassandraConnector cassandraConnector = new CassandraConnector();
                cassandraConnector.connect("127.0.0.1", 9042, "datacenter1");
                cassandraConnector.getSession().execute(sqlQuery);
            }

            System.out.println("Printed Students");

            conn.close();
        }
        catch(Exception e) {
            System.out.print("Do not connect to DB - Error:"+e);
        }

        //get and insert users to cassandra
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = null;
            conn = DriverManager.getConnection("jdbc:mysql://localhost/classattendance","root", "");
            System.out.println("Database is connected !");

            String QUERY = "SELECT * FROM `users` WHERE 1";

            Statement stmt = conn.createStatement();
            java.sql.ResultSet rs = stmt.executeQuery(QUERY);

            while (rs.next()) {
                // Retrieve by column name

                String sqlQuery = "INSERT INTO users (userid, email, names, pass) VALUES ('" + rs.getString("userid") + "','" + rs.getString("email") + "','" + rs.getString("names") + "','"+ rs.getString("pass") + "')";
                CassandraConnector cassandraConnector = new CassandraConnector();
                cassandraConnector.connect("127.0.0.1", 9042, "datacenter1");
                cassandraConnector.getSession().execute(sqlQuery);
            }

            System.out.println("Printed users");

            conn.close();
        }
        catch(Exception e) {
            System.out.print("Do not connect to DB - Error:"+e);
        }

        //get and insert classes to cassandra
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = null;
            conn = DriverManager.getConnection("jdbc:mysql://localhost/classattendance","root", "");
            System.out.println("Database is connected !");

            String QUERY = "SELECT * FROM `classes` WHERE 1";

            Statement stmt = conn.createStatement();
            java.sql.ResultSet rs = stmt.executeQuery(QUERY);

            while (rs.next()) {
                // Retrieve by column name

                String sqlQuery = "INSERT INTO classes (classname, lecname, lecid) VALUES ('" + rs.getString("classname") + "','" + rs.getString("lecname") + "','" + rs.getString("lecid") + "')";
                CassandraConnector cassandraConnector = new CassandraConnector();
                cassandraConnector.connect("127.0.0.1", 9042, "datacenter1");
                cassandraConnector.getSession().execute(sqlQuery);
            }

            System.out.println("Printed classes");

            conn.close();
        }
        catch(Exception e) {
            System.out.print("Do not connect to DB - Error:"+e);
        }

        //get and insert requests to cassandra
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = null;
            conn = DriverManager.getConnection("jdbc:mysql://localhost/classattendance","root", "");
            System.out.println("Database is connected !");

            String QUERY = "SELECT * FROM `requests` WHERE 1";

            Statement stmt = conn.createStatement();
            java.sql.ResultSet rs = stmt.executeQuery(QUERY);

            while (rs.next()) {
                // Retrieve by column name

                String sqlQuery = "INSERT INTO requests (requestid, studentname, requestclass, requestdate, status) VALUES ('" + rs.getString("requestid") + "','" + rs.getString("studentname") + "','" + rs.getString("requestclass")+ "','" + rs.getString("requestdate") + "','" + rs.getString("status") + "')";
                CassandraConnector cassandraConnector = new CassandraConnector();
                cassandraConnector.connect("127.0.0.1", 9042, "datacenter1");
                cassandraConnector.getSession().execute(sqlQuery);
            }

            System.out.println("Printed classes");

            conn.close();
        }
        catch(Exception e) {
            System.out.print("Do not connect to DB - Error:"+e);
        }
    }

    private static void GetBlockchainDBData() {
        CassandraConnector cassandraConnector = new CassandraConnector();
        cassandraConnector.connect("127.0.0.1", 9042, "datacenter1");        

        // #1 load lecturer details
        ResultSet rsusers = cassandraConnector.getSession().execute("SELECT * FROM users");
        ResultSet rsstudents = cassandraConnector.getSession().execute("SELECT * FROM students");
        ResultSet rsclasses = cassandraConnector.getSession().execute("SELECT * FROM classes");
        ResultSet rsrequests = cassandraConnector.getSession().execute("SELECT * FROM requests");
        
        try {
            //truncate tables first
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = null;
            conn = DriverManager.getConnection("jdbc:mysql://localhost/classattendance","root", "");
            System.out.println("Database is connected !");

            //reset table first
            String queryone = "TRUNCATE TABLE users";
            String querytwo = "TRUNCATE TABLE students";
            String querythree = "TRUNCATE TABLE classes";
            String queryfour = "TRUNCATE TABLE requests";
            Statement stmtone = conn.createStatement();
            stmtone.executeUpdate(queryone);
            Statement stmttwo = conn.createStatement();
            stmttwo.executeUpdate(querytwo);
            Statement stmtthree = conn.createStatement();
            stmtthree.executeUpdate(querythree);
            Statement stmtfour = conn.createStatement();
            stmtfour.executeUpdate(queryfour);            


            System.out.println("---Fetched Lecturer data. Starting write operation");
            String names, email, pass, userid, latecounts, earlycount, classname, lecid, lecname, studentname, requestid, requestclass, requestdate, status = null;

            for (Row row : rsusers) 
            {
                names = row.getString("names");
                email = row.getString("email");
                pass = row.getString("pass");
                userid = row.getString("userid");
                
    
                String QUERY = "INSERT INTO users (userid, names, email, pass) VALUES ('" + userid +"','" + names + "','" + email +"','"+ pass + "')";
    
                Statement stmt = conn.createStatement();
                stmt.executeUpdate(QUERY);

                System.out.println("I pass here first");;
                
            }


            for (Row row : rsstudents) 
            {
                names = row.getString("names");
                email = row.getString("email");
                pass = row.getString("pass");
                userid = row.getString("userid");
                latecounts = row.getString("latecounts");
                earlycount = row.getString("earlycounts");
                
    
                String QUERY = "INSERT INTO students (userid, names, email, pass, latecounts, earlycount) VALUES ('" + userid +"','" + names + "','" + email +"','"+ pass + "','" + latecounts + "','" + earlycount + "')";
    
                Statement stmt = conn.createStatement();
                stmt.executeUpdate(QUERY);
                
            }

            for (Row row : rsclasses) 
            {
                classname = row.getString("classname");
                lecid = row.getString("lecid");
                lecname = row.getString("lecname");              
    
                String QUERY = "INSERT INTO classes (classname, lecid, lecname) VALUES ('" + classname +"','" + lecid +"','"+ lecname + "')";
    
                Statement stmt = conn.createStatement();
                stmt.executeUpdate(QUERY);
                
            }

            for (Row row : rsrequests) 
            {
                requestid = row.getString("requestid");
                studentname = row.getString("studentname");
                requestclass = row.getString("requestclass");
                requestdate = row.getString("requestdate");
                status = row.getString("status");
                
    
                String QUERY = "INSERT INTO requests (requestid, studentname, requestclass, requestdate, status) VALUES ('" + requestid +"','" + studentname + "','" + requestclass +"','"+ requestdate + "','" + status + "')";
    
                Statement stmt = conn.createStatement();
                stmt.executeUpdate(QUERY);
                
            }

            System.out.println("---Lecturer Data Entered in to the file successfully");
        } catch (Exception e) {
            e.printStackTrace();
        }



        try {
            Desktop.getDesktop().browse(new URL("http://localhost/EAUPSI/app/src/main/java/testone/htmldocs/").toURI());
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private static void RoutineCheck () {
        CassandraConnector cassandraConnector = new CassandraConnector();
        cassandraConnector.connect("127.0.0.1", 9042, "datacenter1");        

        // #1 load lecturer details
        ResultSet rsusers = cassandraConnector.getSession().execute("SELECT * FROM users");
        ResultSet rsstudents = cassandraConnector.getSession().execute("SELECT * FROM students");
        ResultSet rsclasses = cassandraConnector.getSession().execute("SELECT * FROM classes");
        ResultSet rsrequests = cassandraConnector.getSession().execute("SELECT * FROM requests");
        
        try {
            //truncate tables first
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = null;
            conn = DriverManager.getConnection("jdbc:mysql://localhost/classattendance","root", "");
            System.out.println("Database is connected !");

            //reset table first
            String queryone = "TRUNCATE TABLE users";
            String querytwo = "TRUNCATE TABLE students";
            String querythree = "TRUNCATE TABLE classes";
            String queryfour = "TRUNCATE TABLE requests";
            Statement stmtone = conn.createStatement();
            stmtone.executeUpdate(queryone);
            Statement stmttwo = conn.createStatement();
            stmttwo.executeUpdate(querytwo);
            Statement stmtthree = conn.createStatement();
            stmtthree.executeUpdate(querythree);
            Statement stmtfour = conn.createStatement();
            stmtfour.executeUpdate(queryfour);            


            System.out.println("---Fetched Lecturer data. Starting write operation");
            String names, email, pass, userid, latecounts, earlycount, classname, lecid, lecname, studentname, requestid, requestclass, requestdate, status = null;

            for (Row row : rsusers) 
            {
                names = row.getString("names");
                email = row.getString("email");
                pass = row.getString("pass");
                userid = row.getString("userid");
                
    
                String QUERY = "INSERT INTO users (userid, names, email, pass) VALUES ('" + userid +"','" + names + "','" + email +"','"+ pass + "')";
    
                Statement stmt = conn.createStatement();
                stmt.executeUpdate(QUERY);

                System.out.println("I pass here first");;
                
            }

            for (Row row : rsstudents) 
            {
                names = row.getString("names");
                email = row.getString("email");
                pass = row.getString("pass");
                userid = row.getString("userid");
                latecounts = row.getString("latecounts");
                earlycount = row.getString("earlycounts");
                
    
                String QUERY = "INSERT INTO students (userid, names, email, pass, latecounts, earlycount) VALUES ('" + userid +"','" + names + "','" + email +"','"+ pass + "','" + latecounts + "','" + earlycount + "')";
    
                Statement stmt = conn.createStatement();
                stmt.executeUpdate(QUERY);
                
            }

            for (Row row : rsclasses) 
            {
                classname = row.getString("classname");
                lecid = row.getString("lecid");
                lecname = row.getString("lecname");              
    
                String QUERY = "INSERT INTO classes (classname, lecid, lecname) VALUES ('" + classname +"','" + lecid +"','"+ lecname + "')";
    
                Statement stmt = conn.createStatement();
                stmt.executeUpdate(QUERY);
                
            }

            for (Row row : rsrequests) 
            {
                requestid = row.getString("requestid");
                studentname = row.getString("studentname");
                requestclass = row.getString("requestclass");
                requestdate = row.getString("requestdate");
                status = row.getString("status");
                
    
                String QUERY = "INSERT INTO requests (requestid, studentname, requestclass, requestdate, status) VALUES ('" + requestid +"','" + studentname + "','" + requestclass +"','"+ requestdate + "','" + status + "')";
    
                Statement stmt = conn.createStatement();
                stmt.executeUpdate(QUERY);
                
            }

            System.out.println("---Lecturer Data Entered in to the file successfully");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}